/*
 * Simple theme
 * Slides mode
 *
 * FIXME: should hN.slide default to being like hN.slide.middle.centre?
 * FIXME: Print styles
 * TODO: See if some uses of :not() could be better done as '.slide X' instead
 *
 * Contains some recommended styling for basic slide elements.
 *
 *  - FIXME: doc
 */

/*
 *
 * Typography, spacing and individual content elements
 *
 */

h1,
h2,
h3,
h4,
h5,
h6,
p {
	padding-top: 0.25rem;
	padding-bottom: 0.25rem;
	margin: 0;
}

ul,
ol,
li,
dl {
	margin-top: 0;
	margin-bottom: 0;
}

dt { font-weight: bold; }

ol > li::marker {
	font-weight: bold;
	color: var(--accent-colour, var(--accent-color));
}

/* Adjust default padding or the markers end up outside of the slide */
ul { padding-left: 1rem; }
ol { padding-left: 1.25rem; }

/* FIXME: DOC - how about :not(.slide).centre ? or .slide .centre
 * FIXME: that might not work becuse of propogation of classes when slides
 *        are split -- use a different class for propogating position?
 */
.centre-text,
.center-text { text-align: center; }

/*
FIXME: had to undo this as it would affect bullet points as well as images.
FIXME: but centreing images with 'centre-text' is weird.
.centre,
.center { text-align: center; }
*/
.left { text-align: left; }
.right { text-align: right; }

/* ...and similar for figures. */
figure,
iframe {
	margin: 0;
	width: 100%;
	height: 100%;
}

pre { text-align: left; }

hr { border-bottom: 0.1rem solid var(--text-colour, var(--text-color)); }  /* TODO DRY with table? */

/*
 *
 * Images
 *
 */

/* FIXME:
 * should inline images be aligned middle by default?
 * where's the escape hatch?
 */

/* FIXME: the following should be core?
 * img display block
 * image-wrapper
 * natural-size?
 * really-inline
 * .no-padding > img
 */

/* FIXME: doc */
img { display: block; }

img.really-inline,
img.natural-size {
	display: inline;
	width: calc((var(--width-px) / var(--scaled-image-px-to-percent)) * (var(--computed-slide-width) / 100));
}

/* Non-stretched images are displayed inline. This causes them to be displayed
 * with a gap if their alignment is not explicitly set otherise.
 *
 * FIXME: don't we want inline images to be displayed middle by default too as
 * it looks better on slides?
 */
img.natural-size:not(.really-inline) { vertical-align: middle; }

/* Setting images' alignment
 *
 * If an image has been placed in a flexy column/row then the author might want
 * to have all of the content in the column/row aligned. Images are centered by
 * default so we need to provide an override. Also .left and .right come last
 * because if a flexy column/row is being used, the slide was probably centred
 * overall.
 *
 * FIXME: doc + tutorial
 * FIXME: rows needed at all? */
.centre img,
.center img { object-position: center; }
.left img { object-position: left; }
.right img { object-position: right; }

/* FIXME: doc + test with left and right */
.no-padding > img { align-self: center; }

/* FIXME: doc + make it work with horizontal image wrappers */
.image-wrapper {
	/* overflow is set in code, as has to be on non-slide outer flex parent */
	display: flex;
	flex-direction: column;
}
.image-wrapper.horizontal { flex-direction: row; }

/* On Chrome, we need to explicitly specify this in order to allow the image to
 * shrink below its content size... */
.image-wrapper img,
.no-padding > img { min-height: 0; }

/* By default, assume that images want to be as big as they can be to fill the
 * slide.
 *
 * FIXME: images on no-padding slides that have .natural-size are stretched
 *
 * FIXME: doc here
 * FIXME: update docs
 *
 * TODO: remove figure.slide special case?
 */
img:not(.natural-size),
figure.slide img {
	width: 100%;
	height: 100%;
	object-fit: contain;
}

/* FIXME: doc */
img.padded { padding: 0.25rem; }

@media screen {
	/* Configuring elements in the slideshow */

	html {
		/* FIXME: Due to Helvetica, this is different on non-Macs */
		font-family: Helvetica, Arial, sans-serif;

		/* TODO: scale with font size? */
		line-height: 1.4;  /* goes better with 8vh text than 1.5 */
	}

	/* UI font size
	 *
	 * FIXME: On mobile Safari this behaves how I want it to, with the font
	 *        size being based on the browser default, but on desktop browsers
	 *        it ends up huge.
	 *
	 * TODO: See note in core/slides.css about wanting to start this from the
	 *       browser default. */
	.story-slides-ui { font-size: 1.5rem; }

	@media (min-width: 40rem) {
		.story-slides-ui { font-size: 0.5rem; }
	}

	#story-slides-progress div {
		height: 1vh;
		background-color: var(--secondary-accent-colour, var(--secondary-accent-color));
		transition: width var(--long-fade);  /* set in story-slides.css */
	}

	/* Recommended stuff */

	.space-between {
		display: flex;
		justify-content: space-between;
	}

	/* Split content is two-colour by default */

	.part-odd,
	.inverse,
	.slide.inverse-first > :first-child {
		background-color: var(--accent-colour, var(--accent-color));
		color: var(--background-colour, var(--background-color));
	}

	.slide.two-tone .part-even {
		background-color: var(--background-colour, var(--background-color));
		color: var(--accent-colour, var(--accent-color));
	}

	.slide.inverse-first > :first-child {
		background-color: var(--accent-colour, var(--accent-color));
		color: var(--background-colour, var(--background-color));
	}

	/* FIXME: doc */
	.slide.gap > :first-child { margin-bottom: 1rem; }
	.slide.small-gap > :first-child { margin-bottom: 0.5rem; }
	.slide.tiny-gap > :first-child { margin-bottom: 0.25rem; }

	h1,
	h2,
	h3,
	h4,
	h5,
	h6,
	dt,
	strong { color: var(--accent-colour, var(--accent-color)); }

	/* FIXME: doc */
	.inverse h1,
	.part-odd h1,
	.inverse h2,
	.part-odd h2,
	.inverse h3,
	.part-odd h3,
	.inverse h4,
	.part-odd h4,
	.inverse h5,
	.part-odd h5,
	.inverse h6,
	.part-odd h6,
	.inverse dt,
	.part-odd dt,
	.inverse strong,
	.part-odd strong,
	.slide.inverse-first > :first-child * {
		color: var(--background-colour, var(--background-color));
	}

	/* There should only be one H1: the presentation title, and usually that
	 * would be on a slide that looks quite different. H2s are still quite
	 * important hence this use of inverting them to make them stand out more.
	 * Lower-level headings aren't as important, so don't get the same
	 * inversion, to help _them_ stand out. */
	h1.slide,
	h2.slide {
		background-color: var(--accent-colour, var(--accent-color));
		color: var(--background-colour, var(--background-color));
	}

	/* FIXME: DOC */
	h1.slide.centre,
	h1.slide.center,
	h2.slide.centre,
	h2.slide.center,
	h3.slide.centre,
	h3.slide.center,
	h4.slide.centre,
	h4.slide.center,
	h5.slide.centre,
	h5.slide.center,
	h6.slide.centre,
	h6.slide.center { text-align: center; }

	a { color: var(--text-colour, var(--text-color)); }

	dt > a,
	strong > a { color: var(--accent-colour, var(--accent-color)); }

	/* Presentation-specific extras... */

	.rotate270 {
		width: 1rem;
		transform: rotate(270deg);
		white-space: nowrap;
	}

	figcaption {
		text-align: center;
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		font-size: 0.5rem;
		background-color: rgb(0 0 0 / 50%);
		padding: 0.1rem;
	}
}
